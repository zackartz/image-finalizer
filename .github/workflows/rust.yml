name: Rust

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (Linux)
        run: cargo build --verbose --release

      - name: Build (Windows)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
          rustup target add x86_64-pc-windows-gnu
          cargo build --target x86_64-pc-windows-gnu --release --verbose

      - name: Build (macOS ARM)
        if: runner.os == 'Linux'
        runs-on: macos-latest
        steps:
          - uses: actions/checkout@v4
          - name: Set up Rust toolchain
            uses: actions/setup-rust-toolchain@v1
            with:
              toolchain: stable
              target: aarch64-apple-darwin # Specify ARM target

          - name: Cache Cargo registry
            uses: actions/cache@v3
            with:
              path: |
                ~/.cargo/registry
                ~/.cargo/git
                target
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

          - name: Build (macOS ARM)
            run: cargo build --verbose --release --target aarch64-apple-darwin

      - name: Run tests
        run: cargo test --verbose
