name: Build and Cache Artifacts

on:
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-cache:
    strategy:
      matrix:
        include:
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: macOS-latest
            target: arm64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies and target artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/target
            ${{ github.workspace }}/Cargo.lock
          key: ${{ runner.os }}-rust-${{ hashFiles('Cargo.toml') }}-${{ matrix.target }}
          restore-keys: |
            ${{ runner.os }}-rust-${{ hashFiles('Cargo.toml') }}-
      
      - name: Fetch dependencies
        run: cargo fetch --all-features

      - name: Build application
        run: cargo build --all-features --target ${{ matrix.target }}
      
      - name: Run fmt check
        run: cargo fmt --all -- --check
        continue-on-error: true
      
      - name: Run clippy check
        run: cargo clippy --all-features --all-targets -- -D warnings
        continue-on-error: true

      - name: Package application
        run: |
          if [ "${matrix.target}" == "x86_64-unknown-linux-gnu" ]; then
            cargo deb --all-features
          elif [ "${matrix.target}" == "x86_64-pc-windows-msvc" ]; then
            cargo rpm --all-features
          elif [ "${matrix.target}" == "x86_64-apple-darwin" ] || [ "${matrix.target}" == "arm64-apple-darwin" ]; then
            cargo bundle --all-features
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: application-${matrix.target}
          path: |
            if [ "${matrix.target}" == "x86_64-unknown-linux-gnu" ]; then
              target/deb/
            elif [ "${matrix.target}" == "x86_64-pc-windows-msvc" ]; then
              target/rpm/
            elif [ "${matrix.target}" == "x86_64-apple-darwin" ] || [ "${matrix.target}" == "arm64-apple-darwin" ]; then
              target/bundle/
            fi
